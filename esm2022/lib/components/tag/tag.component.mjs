import { Component, EventEmitter, Input, Output, } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class TagComponent {
    constructor(cdr, renderer, elementRef) {
        this.cdr = cdr;
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.ngxMode = 'default';
        this.ngxChecked = false;
        this.ngxOnClose = new EventEmitter();
        this.ngxCheckedChange = new EventEmitter();
    }
    updateCheckedStatus() {
        if (this.ngxMode === 'checkable') {
            this.ngxChecked = !this.ngxChecked;
            this.ngxCheckedChange.emit(this.ngxChecked);
        }
    }
    closeTag(e) {
        this.ngxOnClose.emit(e);
        if (!e.defaultPrevented) {
            this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TagComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TagComponent, selector: "ngx-tag", inputs: { ngxMode: "ngxMode", ngxColor: "ngxColor", ngxChecked: "ngxChecked" }, outputs: { ngxOnClose: "ngxOnClose", ngxCheckedChange: "ngxCheckedChange" }, host: { listeners: { "click": "updateCheckedStatus()" }, properties: { "style.background-color": "ngxColor", "class.ngx-tag-has-color": "ngxColor? true : false", "class.ngx-tag-checkable": "ngxMode === 'checkable'", "class.ngx-tag-sync": "ngxMode === 'sync'", "class.ngx-tag-checkable-checked": "ngxChecked" }, classAttribute: "ngx-tag" }, ngImport: i0, template: "<svg\n  *ngIf=\"ngxMode === 'sync'\"\n  style=\"\n    filter: invert(100%) sepia(0%) saturate(7500%) hue-rotate(113deg)\n      brightness(110%) contrast(109%);\n  \"\n  class=\"ngx-tag-icon-sync\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  height=\"16\"\n  viewBox=\"0 -960 960 960\"\n  width=\"24\"\n>\n  <path\n    d=\"M160-160v-80h110l-16-14q-52-46-73-105t-21-119q0-111 66.5-197.5T400-790v84q-72 26-116 88.5T240-478q0 45 17 87.5t53 78.5l10 10v-98h80v240H160Zm400-10v-84q72-26 116-88.5T720-482q0-45-17-87.5T650-648l-10-10v98h-80v-240h240v80H690l16 14q49 49 71.5 106.5T800-482q0 111-66.5 197.5T560-170Z\"\n  />\n</svg>\n\n<ng-content></ng-content>\n\n<svg\n  [ngStyle]=\"{\n    filter: ngxColor\n      ? 'invert(100%) sepia(0%) saturate(7500%) hue-rotate(113deg) brightness(110%) contrast(109%)'\n      : ''\n  }\"\n  class=\"ngx-tag-close\"\n  *ngIf=\"ngxMode === 'closeable'\"\n  (click)=\"closeTag($event)\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  height=\"14\"\n  viewBox=\"0 -960 960 960\"\n  width=\"14\"\n>\n  <path\n    d=\"m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z\"\n  />\n</svg>\n", dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TagComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ngx-tag', host: {
                        class: 'ngx-tag',
                        '[style.background-color]': 'ngxColor',
                        '[class.ngx-tag-has-color]': 'ngxColor? true : false',
                        '[class.ngx-tag-checkable]': `ngxMode === 'checkable'`,
                        '[class.ngx-tag-sync]': `ngxMode === 'sync'`,
                        '[class.ngx-tag-checkable-checked]': `ngxChecked`,
                        '(click)': 'updateCheckedStatus()'
                    }, template: "<svg\n  *ngIf=\"ngxMode === 'sync'\"\n  style=\"\n    filter: invert(100%) sepia(0%) saturate(7500%) hue-rotate(113deg)\n      brightness(110%) contrast(109%);\n  \"\n  class=\"ngx-tag-icon-sync\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  height=\"16\"\n  viewBox=\"0 -960 960 960\"\n  width=\"24\"\n>\n  <path\n    d=\"M160-160v-80h110l-16-14q-52-46-73-105t-21-119q0-111 66.5-197.5T400-790v84q-72 26-116 88.5T240-478q0 45 17 87.5t53 78.5l10 10v-98h80v240H160Zm400-10v-84q72-26 116-88.5T720-482q0-45-17-87.5T650-648l-10-10v98h-80v-240h240v80H690l16 14q49 49 71.5 106.5T800-482q0 111-66.5 197.5T560-170Z\"\n  />\n</svg>\n\n<ng-content></ng-content>\n\n<svg\n  [ngStyle]=\"{\n    filter: ngxColor\n      ? 'invert(100%) sepia(0%) saturate(7500%) hue-rotate(113deg) brightness(110%) contrast(109%)'\n      : ''\n  }\"\n  class=\"ngx-tag-close\"\n  *ngIf=\"ngxMode === 'closeable'\"\n  (click)=\"closeTag($event)\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  height=\"14\"\n  viewBox=\"0 -960 960 960\"\n  width=\"14\"\n>\n  <path\n    d=\"m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z\"\n  />\n</svg>\n" }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { ngxMode: [{
                type: Input
            }], ngxColor: [{
                type: Input
            }], ngxChecked: [{
                type: Input
            }], ngxOnClose: [{
                type: Output
            }], ngxCheckedChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFnLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC11aS1jb21wb25lbnRzL3NyYy9saWIvY29tcG9uZW50cy90YWcvdGFnLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC11aS1jb21wb25lbnRzL3NyYy9saWIvY29tcG9uZW50cy90YWcvdGFnLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFFTCxTQUFTLEVBRVQsWUFBWSxFQUNaLEtBQUssRUFDTCxNQUFNLEdBRVAsTUFBTSxlQUFlLENBQUM7OztBQWV2QixNQUFNLE9BQU8sWUFBWTtJQVN2QixZQUNVLEdBQXNCLEVBQ3RCLFFBQW1CLEVBQ25CLFVBQXNCO1FBRnRCLFFBQUcsR0FBSCxHQUFHLENBQW1CO1FBQ3RCLGFBQVEsR0FBUixRQUFRLENBQVc7UUFDbkIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQVh2QixZQUFPLEdBQW1ELFNBQVMsQ0FBQztRQUdwRSxlQUFVLEdBQUcsS0FBSyxDQUFDO1FBRVQsZUFBVSxHQUFHLElBQUksWUFBWSxFQUFjLENBQUM7UUFDNUMscUJBQWdCLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztJQU0vRCxDQUFDO0lBRUosbUJBQW1CO1FBQ2pCLElBQUksSUFBSSxDQUFDLE9BQU8sS0FBSyxXQUFXLEVBQUU7WUFDaEMsSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7WUFDbkMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDN0M7SUFDSCxDQUFDO0lBRUQsUUFBUSxDQUFDLENBQWE7UUFDcEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDeEIsSUFBSSxDQUFDLENBQUMsQ0FBQyxnQkFBZ0IsRUFBRTtZQUN2QixJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsRUFDdkQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQzlCLENBQUM7U0FDSDtJQUNILENBQUM7K0dBOUJVLFlBQVk7bUdBQVosWUFBWSxnaUJDdkJ6Qixpb0NBcUNBOzs0RkRkYSxZQUFZO2tCQWJ4QixTQUFTOytCQUNFLFNBQVMsUUFFYjt3QkFDSixLQUFLLEVBQUUsU0FBUzt3QkFDaEIsMEJBQTBCLEVBQUUsVUFBVTt3QkFDdEMsMkJBQTJCLEVBQUUsd0JBQXdCO3dCQUNyRCwyQkFBMkIsRUFBRSx5QkFBeUI7d0JBQ3RELHNCQUFzQixFQUFFLG9CQUFvQjt3QkFDNUMsbUNBQW1DLEVBQUUsWUFBWTt3QkFDakQsU0FBUyxFQUFFLHVCQUF1QjtxQkFDbkM7eUpBR1EsT0FBTztzQkFBZixLQUFLO2dCQUNHLFFBQVE7c0JBQWhCLEtBQUs7Z0JBRUcsVUFBVTtzQkFBbEIsS0FBSztnQkFFYSxVQUFVO3NCQUE1QixNQUFNO2dCQUNZLGdCQUFnQjtzQkFBbEMsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENoYW5nZURldGVjdG9yUmVmLFxuICBDb21wb25lbnQsXG4gIEVsZW1lbnRSZWYsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsXG4gIE91dHB1dCxcbiAgUmVuZGVyZXIyLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmd4LXRhZycsXG4gIHRlbXBsYXRlVXJsOiAnLi90YWcuY29tcG9uZW50Lmh0bWwnLFxuICBob3N0OiB7XG4gICAgY2xhc3M6ICduZ3gtdGFnJyxcbiAgICAnW3N0eWxlLmJhY2tncm91bmQtY29sb3JdJzogJ25neENvbG9yJyxcbiAgICAnW2NsYXNzLm5neC10YWctaGFzLWNvbG9yXSc6ICduZ3hDb2xvcj8gdHJ1ZSA6IGZhbHNlJyxcbiAgICAnW2NsYXNzLm5neC10YWctY2hlY2thYmxlXSc6IGBuZ3hNb2RlID09PSAnY2hlY2thYmxlJ2AsXG4gICAgJ1tjbGFzcy5uZ3gtdGFnLXN5bmNdJzogYG5neE1vZGUgPT09ICdzeW5jJ2AsXG4gICAgJ1tjbGFzcy5uZ3gtdGFnLWNoZWNrYWJsZS1jaGVja2VkXSc6IGBuZ3hDaGVja2VkYCxcbiAgICAnKGNsaWNrKSc6ICd1cGRhdGVDaGVja2VkU3RhdHVzKCknXG4gIH0sXG59KVxuZXhwb3J0IGNsYXNzIFRhZ0NvbXBvbmVudCB7XG4gIEBJbnB1dCgpIG5neE1vZGU6ICdkZWZhdWx0JyB8ICdjbG9zZWFibGUnIHwgJ2NoZWNrYWJsZScgfCAnc3luYycgPSAnZGVmYXVsdCc7XG4gIEBJbnB1dCgpIG5neENvbG9yPzogc3RyaW5nO1xuXG4gIEBJbnB1dCgpIG5neENoZWNrZWQgPSBmYWxzZTtcblxuICBAT3V0cHV0KCkgcmVhZG9ubHkgbmd4T25DbG9zZSA9IG5ldyBFdmVudEVtaXR0ZXI8TW91c2VFdmVudD4oKTtcbiAgQE91dHB1dCgpIHJlYWRvbmx5IG5neENoZWNrZWRDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBjZHI6IENoYW5nZURldGVjdG9yUmVmLFxuICAgIHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMixcbiAgICBwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWZcbiAgKSB7fVxuXG4gIHVwZGF0ZUNoZWNrZWRTdGF0dXMoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMubmd4TW9kZSA9PT0gJ2NoZWNrYWJsZScpIHtcbiAgICAgIHRoaXMubmd4Q2hlY2tlZCA9ICF0aGlzLm5neENoZWNrZWQ7XG4gICAgICB0aGlzLm5neENoZWNrZWRDaGFuZ2UuZW1pdCh0aGlzLm5neENoZWNrZWQpO1xuICAgIH1cbiAgfVxuXG4gIGNsb3NlVGFnKGU6IE1vdXNlRXZlbnQpOiB2b2lkIHtcbiAgICB0aGlzLm5neE9uQ2xvc2UuZW1pdChlKTtcbiAgICBpZiAoIWUuZGVmYXVsdFByZXZlbnRlZCkge1xuICAgICAgdGhpcy5yZW5kZXJlci5yZW1vdmVDaGlsZChcbiAgICAgICAgdGhpcy5yZW5kZXJlci5wYXJlbnROb2RlKHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50KSxcbiAgICAgICAgdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnRcbiAgICAgICk7XG4gICAgfVxuICB9XG59XG4iLCI8c3ZnXG4gICpuZ0lmPVwibmd4TW9kZSA9PT0gJ3N5bmMnXCJcbiAgc3R5bGU9XCJcbiAgICBmaWx0ZXI6IGludmVydCgxMDAlKSBzZXBpYSgwJSkgc2F0dXJhdGUoNzUwMCUpIGh1ZS1yb3RhdGUoMTEzZGVnKVxuICAgICAgYnJpZ2h0bmVzcygxMTAlKSBjb250cmFzdCgxMDklKTtcbiAgXCJcbiAgY2xhc3M9XCJuZ3gtdGFnLWljb24tc3luY1wiXG4gIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICBoZWlnaHQ9XCIxNlwiXG4gIHZpZXdCb3g9XCIwIC05NjAgOTYwIDk2MFwiXG4gIHdpZHRoPVwiMjRcIlxuPlxuICA8cGF0aFxuICAgIGQ9XCJNMTYwLTE2MHYtODBoMTEwbC0xNi0xNHEtNTItNDYtNzMtMTA1dC0yMS0xMTlxMC0xMTEgNjYuNS0xOTcuNVQ0MDAtNzkwdjg0cS03MiAyNi0xMTYgODguNVQyNDAtNDc4cTAgNDUgMTcgODcuNXQ1MyA3OC41bDEwIDEwdi05OGg4MHYyNDBIMTYwWm00MDAtMTB2LTg0cTcyLTI2IDExNi04OC41VDcyMC00ODJxMC00NS0xNy04Ny41VDY1MC02NDhsLTEwLTEwdjk4aC04MHYtMjQwaDI0MHY4MEg2OTBsMTYgMTRxNDkgNDkgNzEuNSAxMDYuNVQ4MDAtNDgycTAgMTExLTY2LjUgMTk3LjVUNTYwLTE3MFpcIlxuICAvPlxuPC9zdmc+XG5cbjxuZy1jb250ZW50PjwvbmctY29udGVudD5cblxuPHN2Z1xuICBbbmdTdHlsZV09XCJ7XG4gICAgZmlsdGVyOiBuZ3hDb2xvclxuICAgICAgPyAnaW52ZXJ0KDEwMCUpIHNlcGlhKDAlKSBzYXR1cmF0ZSg3NTAwJSkgaHVlLXJvdGF0ZSgxMTNkZWcpIGJyaWdodG5lc3MoMTEwJSkgY29udHJhc3QoMTA5JSknXG4gICAgICA6ICcnXG4gIH1cIlxuICBjbGFzcz1cIm5neC10YWctY2xvc2VcIlxuICAqbmdJZj1cIm5neE1vZGUgPT09ICdjbG9zZWFibGUnXCJcbiAgKGNsaWNrKT1cImNsb3NlVGFnKCRldmVudClcIlxuICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgaGVpZ2h0PVwiMTRcIlxuICB2aWV3Qm94PVwiMCAtOTYwIDk2MCA5NjBcIlxuICB3aWR0aD1cIjE0XCJcbj5cbiAgPHBhdGhcbiAgICBkPVwibTI1Ni0yMDAtNTYtNTYgMjI0LTIyNC0yMjQtMjI0IDU2LTU2IDIyNCAyMjQgMjI0LTIyNCA1NiA1Ni0yMjQgMjI0IDIyNCAyMjQtNTYgNTYtMjI0LTIyNC0yMjQgMjI0WlwiXG4gIC8+XG48L3N2Zz5cbiJdfQ==
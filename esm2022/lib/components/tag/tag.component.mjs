import { Component, EventEmitter, Input, Output, } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class TagComponent {
    constructor(renderer, elementRef) {
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.ngxMode = 'default';
        this.ngxChecked = false;
        this.ngxOnClose = new EventEmitter();
        this.ngxCheckedChange = new EventEmitter();
    }
    updateCheckedStatus() {
        if (this.ngxMode === 'checkable') {
            this.ngxChecked = !this.ngxChecked;
            this.ngxCheckedChange.emit(this.ngxChecked);
        }
    }
    closeTag(e) {
        this.ngxOnClose.emit(e);
        if (!e.defaultPrevented) {
            this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TagComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TagComponent, selector: "ngx-tag", inputs: { ngxMode: "ngxMode", ngxColor: "ngxColor", ngxChecked: "ngxChecked" }, outputs: { ngxOnClose: "ngxOnClose", ngxCheckedChange: "ngxCheckedChange" }, host: { listeners: { "click": "updateCheckedStatus()" }, properties: { "style.background-color": "ngxColor", "class.ngx-tag-has-color": "ngxColor? true : false", "class.ngx-tag-checkable": "ngxMode === 'checkable'", "class.ngx-tag-sync": "ngxMode === 'sync'", "class.ngx-tag-checkable-checked": "ngxChecked" }, classAttribute: "ngx-tag" }, ngImport: i0, template: "<svg\n  *ngIf=\"ngxMode === 'sync'\"\n  style=\"\n    filter: invert(100%) sepia(0%) saturate(7500%) hue-rotate(113deg)\n      brightness(110%) contrast(109%);\n  \"\n  class=\"ngx-tag-icon-sync\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  height=\"16\"\n  viewBox=\"0 -960 960 960\"\n  width=\"24\"\n>\n  <path\n    d=\"M160-160v-80h110l-16-14q-52-46-73-105t-21-119q0-111 66.5-197.5T400-790v84q-72 26-116 88.5T240-478q0 45 17 87.5t53 78.5l10 10v-98h80v240H160Zm400-10v-84q72-26 116-88.5T720-482q0-45-17-87.5T650-648l-10-10v98h-80v-240h240v80H690l16 14q49 49 71.5 106.5T800-482q0 111-66.5 197.5T560-170Z\"\n  />\n</svg>\n\n<ng-content></ng-content>\n\n<svg\n  [ngStyle]=\"{\n    filter: ngxColor\n      ? 'invert(100%) sepia(0%) saturate(7500%) hue-rotate(113deg) brightness(110%) contrast(109%)'\n      : ''\n  }\"\n  class=\"ngx-tag-close\"\n  *ngIf=\"ngxMode === 'closeable'\"\n  (click)=\"closeTag($event)\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  height=\"14\"\n  viewBox=\"0 -960 960 960\"\n  width=\"14\"\n>\n  <path\n    d=\"m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z\"\n  />\n</svg>\n", dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TagComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ngx-tag', host: {
                        class: 'ngx-tag',
                        '[style.background-color]': 'ngxColor',
                        '[class.ngx-tag-has-color]': 'ngxColor? true : false',
                        '[class.ngx-tag-checkable]': `ngxMode === 'checkable'`,
                        '[class.ngx-tag-sync]': `ngxMode === 'sync'`,
                        '[class.ngx-tag-checkable-checked]': `ngxChecked`,
                        '(click)': 'updateCheckedStatus()'
                    }, template: "<svg\n  *ngIf=\"ngxMode === 'sync'\"\n  style=\"\n    filter: invert(100%) sepia(0%) saturate(7500%) hue-rotate(113deg)\n      brightness(110%) contrast(109%);\n  \"\n  class=\"ngx-tag-icon-sync\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  height=\"16\"\n  viewBox=\"0 -960 960 960\"\n  width=\"24\"\n>\n  <path\n    d=\"M160-160v-80h110l-16-14q-52-46-73-105t-21-119q0-111 66.5-197.5T400-790v84q-72 26-116 88.5T240-478q0 45 17 87.5t53 78.5l10 10v-98h80v240H160Zm400-10v-84q72-26 116-88.5T720-482q0-45-17-87.5T650-648l-10-10v98h-80v-240h240v80H690l16 14q49 49 71.5 106.5T800-482q0 111-66.5 197.5T560-170Z\"\n  />\n</svg>\n\n<ng-content></ng-content>\n\n<svg\n  [ngStyle]=\"{\n    filter: ngxColor\n      ? 'invert(100%) sepia(0%) saturate(7500%) hue-rotate(113deg) brightness(110%) contrast(109%)'\n      : ''\n  }\"\n  class=\"ngx-tag-close\"\n  *ngIf=\"ngxMode === 'closeable'\"\n  (click)=\"closeTag($event)\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  height=\"14\"\n  viewBox=\"0 -960 960 960\"\n  width=\"14\"\n>\n  <path\n    d=\"m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z\"\n  />\n</svg>\n" }]
        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { ngxMode: [{
                type: Input
            }], ngxColor: [{
                type: Input
            }], ngxChecked: [{
                type: Input
            }], ngxOnClose: [{
                type: Output
            }], ngxCheckedChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFnLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC11aS1jb21wb25lbnRzL3NyYy9saWIvY29tcG9uZW50cy90YWcvdGFnLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC11aS1jb21wb25lbnRzL3NyYy9saWIvY29tcG9uZW50cy90YWcvdGFnLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxTQUFTLEVBRVQsWUFBWSxFQUNaLEtBQUssRUFDTCxNQUFNLEdBRVAsTUFBTSxlQUFlLENBQUM7OztBQWV2QixNQUFNLE9BQU8sWUFBWTtJQVN2QixZQUNVLFFBQW1CLEVBQ25CLFVBQXNCO1FBRHRCLGFBQVEsR0FBUixRQUFRLENBQVc7UUFDbkIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQVZ2QixZQUFPLEdBQW1ELFNBQVMsQ0FBQztRQUdwRSxlQUFVLEdBQUcsS0FBSyxDQUFDO1FBRVQsZUFBVSxHQUFHLElBQUksWUFBWSxFQUFjLENBQUM7UUFDNUMscUJBQWdCLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztJQUsvRCxDQUFDO0lBRUosbUJBQW1CO1FBQ2pCLElBQUksSUFBSSxDQUFDLE9BQU8sS0FBSyxXQUFXLEVBQUU7WUFDaEMsSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7WUFDbkMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDN0M7SUFDSCxDQUFDO0lBRUQsUUFBUSxDQUFDLENBQWE7UUFDcEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDeEIsSUFBSSxDQUFDLENBQUMsQ0FBQyxnQkFBZ0IsRUFBRTtZQUN2QixJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsRUFDdkQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQzlCLENBQUM7U0FDSDtJQUNILENBQUM7K0dBN0JVLFlBQVk7bUdBQVosWUFBWSxnaUJDdEJ6Qixpb0NBcUNBOzs0RkRmYSxZQUFZO2tCQWJ4QixTQUFTOytCQUNFLFNBQVMsUUFFYjt3QkFDSixLQUFLLEVBQUUsU0FBUzt3QkFDaEIsMEJBQTBCLEVBQUUsVUFBVTt3QkFDdEMsMkJBQTJCLEVBQUUsd0JBQXdCO3dCQUNyRCwyQkFBMkIsRUFBRSx5QkFBeUI7d0JBQ3RELHNCQUFzQixFQUFFLG9CQUFvQjt3QkFDNUMsbUNBQW1DLEVBQUUsWUFBWTt3QkFDakQsU0FBUyxFQUFFLHVCQUF1QjtxQkFDbkM7eUhBR1EsT0FBTztzQkFBZixLQUFLO2dCQUNHLFFBQVE7c0JBQWhCLEtBQUs7Z0JBRUcsVUFBVTtzQkFBbEIsS0FBSztnQkFFYSxVQUFVO3NCQUE1QixNQUFNO2dCQUNZLGdCQUFnQjtzQkFBbEMsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgRWxlbWVudFJlZixcbiAgRXZlbnRFbWl0dGVyLFxuICBJbnB1dCxcbiAgT3V0cHV0LFxuICBSZW5kZXJlcjIsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICduZ3gtdGFnJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RhZy5jb21wb25lbnQuaHRtbCcsXG4gIGhvc3Q6IHtcbiAgICBjbGFzczogJ25neC10YWcnLFxuICAgICdbc3R5bGUuYmFja2dyb3VuZC1jb2xvcl0nOiAnbmd4Q29sb3InLFxuICAgICdbY2xhc3Mubmd4LXRhZy1oYXMtY29sb3JdJzogJ25neENvbG9yPyB0cnVlIDogZmFsc2UnLFxuICAgICdbY2xhc3Mubmd4LXRhZy1jaGVja2FibGVdJzogYG5neE1vZGUgPT09ICdjaGVja2FibGUnYCxcbiAgICAnW2NsYXNzLm5neC10YWctc3luY10nOiBgbmd4TW9kZSA9PT0gJ3N5bmMnYCxcbiAgICAnW2NsYXNzLm5neC10YWctY2hlY2thYmxlLWNoZWNrZWRdJzogYG5neENoZWNrZWRgLFxuICAgICcoY2xpY2spJzogJ3VwZGF0ZUNoZWNrZWRTdGF0dXMoKSdcbiAgfSxcbn0pXG5leHBvcnQgY2xhc3MgVGFnQ29tcG9uZW50IHtcbiAgQElucHV0KCkgbmd4TW9kZTogJ2RlZmF1bHQnIHwgJ2Nsb3NlYWJsZScgfCAnY2hlY2thYmxlJyB8ICdzeW5jJyA9ICdkZWZhdWx0JztcbiAgQElucHV0KCkgbmd4Q29sb3I/OiBzdHJpbmc7XG5cbiAgQElucHV0KCkgbmd4Q2hlY2tlZCA9IGZhbHNlO1xuXG4gIEBPdXRwdXQoKSByZWFkb25seSBuZ3hPbkNsb3NlID0gbmV3IEV2ZW50RW1pdHRlcjxNb3VzZUV2ZW50PigpO1xuICBAT3V0cHV0KCkgcmVhZG9ubHkgbmd4Q2hlY2tlZENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjIsXG4gICAgcHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmXG4gICkge31cblxuICB1cGRhdGVDaGVja2VkU3RhdHVzKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLm5neE1vZGUgPT09ICdjaGVja2FibGUnKSB7XG4gICAgICB0aGlzLm5neENoZWNrZWQgPSAhdGhpcy5uZ3hDaGVja2VkO1xuICAgICAgdGhpcy5uZ3hDaGVja2VkQ2hhbmdlLmVtaXQodGhpcy5uZ3hDaGVja2VkKTtcbiAgICB9XG4gIH1cblxuICBjbG9zZVRhZyhlOiBNb3VzZUV2ZW50KTogdm9pZCB7XG4gICAgdGhpcy5uZ3hPbkNsb3NlLmVtaXQoZSk7XG4gICAgaWYgKCFlLmRlZmF1bHRQcmV2ZW50ZWQpIHtcbiAgICAgIHRoaXMucmVuZGVyZXIucmVtb3ZlQ2hpbGQoXG4gICAgICAgIHRoaXMucmVuZGVyZXIucGFyZW50Tm9kZSh0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCksXG4gICAgICAgIHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50XG4gICAgICApO1xuICAgIH1cbiAgfVxufVxuIiwiPHN2Z1xuICAqbmdJZj1cIm5neE1vZGUgPT09ICdzeW5jJ1wiXG4gIHN0eWxlPVwiXG4gICAgZmlsdGVyOiBpbnZlcnQoMTAwJSkgc2VwaWEoMCUpIHNhdHVyYXRlKDc1MDAlKSBodWUtcm90YXRlKDExM2RlZylcbiAgICAgIGJyaWdodG5lc3MoMTEwJSkgY29udHJhc3QoMTA5JSk7XG4gIFwiXG4gIGNsYXNzPVwibmd4LXRhZy1pY29uLXN5bmNcIlxuICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgaGVpZ2h0PVwiMTZcIlxuICB2aWV3Qm94PVwiMCAtOTYwIDk2MCA5NjBcIlxuICB3aWR0aD1cIjI0XCJcbj5cbiAgPHBhdGhcbiAgICBkPVwiTTE2MC0xNjB2LTgwaDExMGwtMTYtMTRxLTUyLTQ2LTczLTEwNXQtMjEtMTE5cTAtMTExIDY2LjUtMTk3LjVUNDAwLTc5MHY4NHEtNzIgMjYtMTE2IDg4LjVUMjQwLTQ3OHEwIDQ1IDE3IDg3LjV0NTMgNzguNWwxMCAxMHYtOThoODB2MjQwSDE2MFptNDAwLTEwdi04NHE3Mi0yNiAxMTYtODguNVQ3MjAtNDgycTAtNDUtMTctODcuNVQ2NTAtNjQ4bC0xMC0xMHY5OGgtODB2LTI0MGgyNDB2ODBINjkwbDE2IDE0cTQ5IDQ5IDcxLjUgMTA2LjVUODAwLTQ4MnEwIDExMS02Ni41IDE5Ny41VDU2MC0xNzBaXCJcbiAgLz5cbjwvc3ZnPlxuXG48bmctY29udGVudD48L25nLWNvbnRlbnQ+XG5cbjxzdmdcbiAgW25nU3R5bGVdPVwie1xuICAgIGZpbHRlcjogbmd4Q29sb3JcbiAgICAgID8gJ2ludmVydCgxMDAlKSBzZXBpYSgwJSkgc2F0dXJhdGUoNzUwMCUpIGh1ZS1yb3RhdGUoMTEzZGVnKSBicmlnaHRuZXNzKDExMCUpIGNvbnRyYXN0KDEwOSUpJ1xuICAgICAgOiAnJ1xuICB9XCJcbiAgY2xhc3M9XCJuZ3gtdGFnLWNsb3NlXCJcbiAgKm5nSWY9XCJuZ3hNb2RlID09PSAnY2xvc2VhYmxlJ1wiXG4gIChjbGljayk9XCJjbG9zZVRhZygkZXZlbnQpXCJcbiAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gIGhlaWdodD1cIjE0XCJcbiAgdmlld0JveD1cIjAgLTk2MCA5NjAgOTYwXCJcbiAgd2lkdGg9XCIxNFwiXG4+XG4gIDxwYXRoXG4gICAgZD1cIm0yNTYtMjAwLTU2LTU2IDIyNC0yMjQtMjI0LTIyNCA1Ni01NiAyMjQgMjI0IDIyNC0yMjQgNTYgNTYtMjI0IDIyNCAyMjQgMjI0LTU2IDU2LTIyNC0yMjQtMjI0IDIyNFpcIlxuICAvPlxuPC9zdmc+XG4iXX0=